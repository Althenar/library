swagger: '2.0'
info:
  version: '1.0.0'
  title: AlthSoft Library tracker
  description: A simple API to track location of books
  contact:
    email: r@zxcv.pl
    url: http://zxcv.pl
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: library.zxcv.pl
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /bookcase:
    get:
      description: Returns all bookcases
      operationId: findBookcases
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: bookcase response
          schema:
            type: array
            items:
              $ref: '#/definitions/bookcase'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new bookcase
      operationId: addBookcase
      produces:
        - application/json
      parameters:
        - name: bookcase
          in: body
          description: Bookcase
          required: true
          schema:
            $ref: '#/definitions/newBookcase'
      responses:
        '200':
          description: bookcase response
          schema:
            $ref: '#/definitions/bookcase'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /bookcase/{id}:
    get:
      description: Returns a bookcase based on ID
      operationId: findBookcaseByID
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of bookcase to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: bookcase response
          schema:
            $ref: '#/definitions/bookcase'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single bookcase
      operationId: deleteBookcase
      parameters:
        - name: id
          in: path
          description: ID of bookcase to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: bookcase deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /shelf:
    get:
      description: Returns all shelves
      operationId: findShelves
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: shelves response
          schema:
            type: array
            items:
              $ref: '#/definitions/bookcase'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new shelf
      operationId: addShelf
      produces:
        - application/json
      parameters:
        - name: shelf
          in: body
          description: shelf
          required: true
          schema:
            $ref: '#/definitions/newShelf'
      responses:
        '200':
          description: shelf response
          schema:
            $ref: '#/definitions/shelf'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /shelf/{id}:
    get:
      description: Returns a shelf based on ID
      operationId: findShelfByID
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of shelf to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: shelf response
          schema:
            $ref: '#/definitions/shelf'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single shelf
      operationId: deleteShelf
      parameters:
        - name: id
          in: path
          description: ID of shelf to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: shelf deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /book:
    get:
      description: Returns all books
      operationId: findBooks
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: books response
          schema:
            type: array
            items:
              $ref: '#/definitions/book'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new book
      operationId: addBook
      produces:
        - application/json
      parameters:
        - name: book
          in: body
          description: shelf
          required: true
          schema:
            $ref: '#/definitions/newBook'
      responses:
        '200':
          description: book response
          schema:
            $ref: '#/definitions/book'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /book/{id}:
    get:
      description: Returns a book based on ID
      operationId: findBookByID
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of book to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: book response
          schema:
            $ref: '#/definitions/book'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single book
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          description: ID of book to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: book deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  book:
    type: object
    required:
      - id
      - isbn
    properties:
      id:
        type: integer
        format: int64
      isbn:
        type: string
      author:
        type: string
      title:
        type: string
  newBook:
    type: object
    required:
      - shelf
      - isbn
    properties:
      shelf:
        type: integer
        format: int64
      isbn:
        type: string
      author:
        type: string
      title:
        type: string
        
  shelf:
    type: object
    required:
      - id
      - row
      - col
    properties:
      id:
        type: integer
        format: int64
      row:
        type: integer
        format: int
      col:
        type: integer
        format: int
      books:
        type: array
        items:
          $ref: '#/definitions/book'
  newShelf:
    type: object
    required:
      - bookcase
      - row
      - col
    properties:
      bookcase:
        type: integer
        format: int64
      row:
        type: integer
        format: int
      col:
        type: integer
        format: int

  bookcase:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      shelves:
        type: array
        items:
          $ref: '#/definitions/shelf'
  newBookcase:
    type: object
    required:
      - name
    properties:
      name:
        type: string

  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
